basePath: /v1
definitions:
  entity.Asset:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      price:
        type: number
    type: object
  entity.Credentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  v1.createAssetRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  v1.depositRequest:
    properties:
      amount:
        type: number
    type: object
  v1.depositResponse:
    properties:
      balance:
        type: number
      status:
        type: string
    type: object
  v1.listOfAssetResponse:
    properties:
      assets:
        items:
          $ref: '#/definitions/entity.Asset'
        type: array
    type: object
  v1.loginResponse:
    properties:
      status:
        type: string
      token:
        type: string
    type: object
  v1.response:
    properties:
      status:
        example: message
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A test assignment for a backend developer at BHS
  title: Bhs-task
  version: "1.0"
paths:
  /asset:
    get:
      consumes:
      - application/json
      description: Retrieves all assets belonging to the currently authenticated user.
      operationId: MyAssets
      produces:
      - application/json
      responses:
        "200":
          description: List of user's assets
          schema:
            $ref: '#/definitions/v1.listOfAssetResponse'
        "404":
          description: No assets found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: List User Assets
      tags:
      - Asset
    post:
      consumes:
      - application/json
      description: Adds a new asset to the system with the specified details.
      operationId: CreateAsset
      parameters:
      - description: Asset details (name, description, price)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.createAssetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Asset added successfully
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal server error or asset creation failed
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Create Asset
      tags:
      - Asset
  /asset/{id}:
    delete:
      consumes:
      - application/json
      description: Removes an asset from the system based on the provided asset ID.
      operationId: DeleteAsset
      parameters:
      - description: Asset ID to be deleted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Asset removed successfully
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Asset not found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Delete Asset
      tags:
      - Asset
    get:
      consumes:
      - application/json
      description: Get an asset from the system based on the provided asset ID.
      operationId: GetAsset
      parameters:
      - description: Asset ID to retrieve
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Asset retrieved successfully
          schema:
            $ref: '#/definitions/entity.Asset'
        "404":
          description: Asset not found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Get Asset
      tags:
      - Asset
  /asset/{id}/buy:
    get:
      consumes:
      - application/json
      description: Allows the user to purchase an asset by its ID.
      operationId: BuyAsset
      parameters:
      - description: Asset ID to retrieve
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Asset purchased successfully
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Asset not found or purchase failed
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Buy Asset
      tags:
      - Asset
  /asset/market:
    get:
      consumes:
      - application/json
      description: Retrieves all assets available for purchase in the system.
      operationId: BuyingList
      produces:
      - application/json
      responses:
        "200":
          description: List of assets available for buying
          schema:
            $ref: '#/definitions/v1.listOfAssetResponse'
        "404":
          description: No assets found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Get List of Assets for Buying
      tags:
      - Asset
  /asset/purchased:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all purchased assets.
      operationId: PurchasedAsset
      produces:
      - application/json
      responses:
        "200":
          description: List of purchased assets
          schema:
            $ref: '#/definitions/v1.listOfAssetResponse'
        "404":
          description: No assets found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Get List of Purchased Assets
      tags:
      - Asset
  /deposit:
    get:
      consumes:
      - application/json
      description: Retrieves the current balance for the authenticated user.
      operationId: CheckDeposit
      produces:
      - application/json
      responses:
        "200":
          description: Current balance retrieved successfully
          schema:
            $ref: '#/definitions/v1.depositResponse'
        "500":
          description: Internal server error or user not found
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Get Current Deposit
      tags:
      - Deposit
    post:
      consumes:
      - application/json
      description: Allows a user to make a deposit to their account and returns the
        updated balance.
      operationId: MakeDeposit
      parameters:
      - description: Amount to be deposited
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.depositRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Deposit successful and updated balance
          schema:
            $ref: '#/definitions/v1.depositResponse'
        "500":
          description: Internal server error or deposit failed
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - ApiKeyAuth: []
      summary: Make a Deposit
      tags:
      - Deposit
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates the user by verifying credentials and returns a JWT
        token on success.
      operationId: login
      parameters:
      - description: User credentials (e.g., username, password)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: Success message and JWT token
          schema:
            $ref: '#/definitions/v1.loginResponse'
        "500":
          description: Internal server error or invalid credentials
          schema:
            $ref: '#/definitions/v1.response'
      summary: User Login
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Handles user registration by accepting credentials and registering
        a new user in the system.
      operationId: register
      parameters:
      - description: User credentials (e.g., username, password)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal server error or user already exists
          schema:
            $ref: '#/definitions/v1.response'
      summary: User Registration
      tags:
      - Authentication
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
