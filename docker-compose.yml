services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    env_file:
      - .env

  app:
    build: .
    container_name: app
    image: app
    environment:
      PG_URL: 'postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}'
    ports:
      - 8080:8080
    depends_on:
      - postgres
    env_file:
      - .env

  # integration:
  #   build:
  #     context: .
  #     dockerfile: integration-test/Dockerfile
  #   container_name: integration
  #   image: integration
  #   depends_on:
  #     - app

volumes:
  pg-data:
